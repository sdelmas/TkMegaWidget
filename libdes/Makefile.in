#
# This file is a Makefile for libdes.  If it has the name "Makefile.in",
# it is a template for a Makefile; to generate the actual Makefile,
# run "./configure", which is a configuration script generated by the
# "autoconf" program (constructs like "@foo@" will get replaced in the
# actual Makefile).

#----------------------------------------------------------------
# Things you can change to personalize the Makefile for your own
# site (you can make these changes in either Makefile.in or
# Makefile, but changes to Makefile will get lost if you re-run
# the configuration script).
#----------------------------------------------------------------

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such
# as scripts (prefix).  The values specified here may be overridden
# at configure-time with the --exec-prefix and --prefix options
# to the "configure" script.

exec_prefix =	@exec_prefix@
prefix =	@prefix@

LIB_DIR=$(exec_prefix)/lib
BIN_DIR=$(exec_prefix)/bin
INC_DIR=$(prefix)/include
MAN_DIR=$(prefix)/man

MAN1=1
MAN3=3

SHELL=/bin/sh

# Turn this option on if using a SGI Iris running IRIX.
# IRIX does not appear to define sgttyb anywhere :-(
#OPTS0= @OPTS0@

# Version 1.94 has changed the strings_to_key function so that it is
# now compatible with MITs when the string is longer than 8 characters.
# If you wish to keep the old version, uncomment the following line.
# This will affect the -E/-D options on des(1).
#OPTS1= -DOLD_STR_TO_KEY

# This #define specifies the use of an alternative D_ENCRYPT macro in
# ecb_encrypt.  The choice of macro can make a %20 difference in the
# speed.  Unfortunatly the choise of the best macro appears to be very
# dependant on the compiler and the machine in question.
# For the following combinations use the ALT_ECB option.
# Sparc 2 (cc -O4), sun 3/260 (cc -O4)
# For the following combinations do not use the ALT_ECB option.
# Sparc 2 (gcc2 -O2), sun 3/260 (cc -O2), mvax2 (cc -O), MSDOS (Turbo Cv2)
# For other machines, experiment with changing the option and run
# ./speed to see which is faster.
# DO NOT TURN THIS OPTION ON WHEN COMPILING THIS CODE ON A 64 BIT MACHINE
#OPTS2= -DALT_ECB

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

PICFLAGS=@PICFLAGS@
SHDIR=@SHDIR@
SHLIBSO=@SHLIBSO@
SHARED_LIBS=
LD_DIR=@LD_DIR@
F1=[
F2=]

INSTALL =               @INSTALL@
INSTALL_PROGRAM =       @INSTALL_PROGRAM@
INSTALL_DATA =          @INSTALL_DATA@
RANLIB =		@RANLIB@
LN_S =			@LN_S@

#----------------------------------------------------------------
# The information below should be usable as is.  The configure
# script won't modify it and you shouldn't need to modify it
# either.
#----------------------------------------------------------------

CC =		@CC@
CC_SWITCHES =	$(CFLAGS) $(OPTS0) $(OPTS1) $(OPTS2) $(OPTS3)

OBJS=	cbc_cksm.o cbc_enc.o ecb_enc.o pcbc_enc.o \
	qud_cksm.o rand_key.o read_pwd.o set_key.o str2key.o \
	enc_read.o enc_writ.o fcrypt.o cfb_enc.o \
	3ecb_enc.o ofb_enc.o 3cbc_enc.o

GENERAL=ARTISTIC COPYING FILES INSTALL Imakefile README VERSION makefile.orig \
	times vms.com KERBEROS MODES.DES CHANGES

DES=	des.c des.man

TESTING=destest.c speed.c rpw.c

LIBDES=	des_crypt.man des.h cbc_cksm.c cbc_enc.c ecb_enc.c \
	enc_read.c enc_writ.c pcbc_enc.c qud_cksm.c rand_key.c \
	read_pwd.c set_key.c str2key.c fcrypt.c des_locl.h \
	podd.h sk.h spr.h cfb_enc.c 3ecb_enc.c \
	ofb_enc.c 3cbc_enc.c

PERL=	des.pl testdes.pl doIP doPC1 doPC2 PC1 PC2 shifts.pl

ALL=	$(GENERAL) $(DES) $(TESTING) $(LIBDES) $(PERL)

all: libdes.a destest rpw des speed

destest: destest.o libdes.a
	$(CC) $(CFLAGS) -o destest destest.o libdes.a

rpw: rpw.o libdes.a
	$(CC) $(CFLAGS) -o rpw rpw.o libdes.a

speed: speed.o libdes.a
	$(CC) $(CFLAGS) -o speed speed.o libdes.a

des: des.o libdes.a
	$(CC) $(CFLAGS) -o des des.o libdes.a

libdes.a: make-$(SHLIBSO) $(OBJS)
	-@rm -f libdes.a; \
	ar cr libdes.a $(OBJS); \
	$(RANLIB) libdes.a

install: libdes.a des
	cp libdes.a $(LIB_DIR)/libdes.a
	$(RANLIB) $(LIB_DIR)/libdes.a
	chmod 644 $(LIB_DIR)/libdes.a
	cp des $(BIN_DIR)/des
	chmod 711 $(BIN_DIR)/des
	cp des_crypt.man $(MAN_DIR)/man$(MAN3)/des_crypt.$(MAN3)
	chmod 644 $(MAN_DIR)/man$(MAN3)/des_crypt.$(MAN3)
	cp des.man $(MAN_DIR)/man$(MAN1)/des.$(MAN1)
	chmod 644 $(MAN_DIR)/man$(MAN1)/des.$(MAN1)
	cp des.h $(INC_DIR)/des.h
	chmod 644 $(INC_DIR)/des.h

make-$(SHLIBSO): $(OBJS)
	@SHLIBSO_BLD@

Makefile: ./Makefile.in
	$(SHELL) config.status

clean:
	-@rm -f libdes.* *.o shared/* core errs *~ \#* TAGS *.E a.out errors rpw destest des speed

distclean: clean
	rm -f Makefile config.status

.c.o:
	@SHAREDCC@
	$(CC) -c $(CC_SWITCHES) $<

